# Generated by Django 5.1.4 on 2025-04-22 04:15

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('department', models.CharField(max_length=100, unique=True)),
                ('code_word', models.CharField(blank=True, max_length=10, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('domain', models.CharField(max_length=100, unique=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssertStock',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('assert_id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('configuration', models.CharField(max_length=100)),
                ('assert_model', models.CharField(max_length=255)),
                ('inhand', models.BooleanField(default=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('assignment_history', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AssertIssue',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('issue', models.CharField(max_length=255)),
                ('allocated_Assets', models.CharField(choices=[('Laptop', 'Laptop'), ('Mouse', 'Mouse'), ('Charger', 'Charger'), ('Headphone', 'Headphone')], max_length=50, null=True)),
                ('condition', models.CharField(choices=[('Usable', 'Usable'), ('Not Usable', 'Not Usable')], max_length=50)),
                ('it_support', models.CharField(choices=[('Hand Over', 'Hand Over'), ('In Hand', 'In Hand')], max_length=50)),
                ('alternate_laptop', models.CharField(blank=True, max_length=255, null=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('assert_id', models.ForeignKey(db_column='assert_id', on_delete=django.db.models.deletion.CASCADE, to='Sims.assertstock')),
            ],
        ),
        migrations.CreateModel(
            name='FeeStructure',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scheme', models.CharField(choices=[('FREE', 'FREE'), ('COURSE', 'COURSE'), ('PROJECT', 'PROJECT')], max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('domain', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Sims.domain', to_field='domain')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('leave_type', models.CharField(choices=[('CASUAL', 'Casual Leave'), ('SICK', 'Sick Leave'), ('EMERGENCY', 'Emergency Leave'), ('PERSONAL', 'Personal Leave'), ('VACATION', 'Vacation Leave')], max_length=20)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('half_day_start', models.BooleanField(default=False)),
                ('half_day_end', models.BooleanField(default=False)),
                ('request_reason', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('remaining_leave_count', models.IntegerField(blank=True, default=5, null=True)),
                ('number_of_days', models.FloatField(blank=True, null=True)),
                ('reporting_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manager_leaves', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('date', models.DateField(auto_now_add=True)),
                ('check_in', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('check_out', models.DateTimeField(blank=True, null=True)),
                ('total_hours', models.DurationField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('remaining_leave_count', models.IntegerField(default=5)),
                ('max_leave_count', models.IntegerField(default=5)),
                ('leaves_taken', models.FloatField(default=0)),
                ('present_status', models.CharField(choices=[('Present', 'Present'), ('Absent', 'Absent'), ('Null', 'Null')], default='Null', max_length=20)),
                ('leave_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_records', to='Sims.leaverequest')),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('table_name', models.CharField(max_length=255)),
                ('action', models.CharField(max_length=50)),
                ('old_data', models.TextField()),
                ('new_data', models.TextField()),
                ('user_name', models.CharField(max_length=255)),
                ('updated_date', models.DateField(auto_now=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetOTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('otp', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('committed_date', models.DateField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Under_Review', 'Under_Review'), ('In_Progress', 'In_Progress'), ('Completed', 'Completed'), ('Missing', 'Missing'), ('Not_Started', 'Not_Started')], default='Not_Started', max_length=50)),
                ('hours_committed', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('days_committed', models.CharField(blank=True, max_length=255, null=True)),
                ('task_description', models.TextField()),
                ('task_title', models.CharField(max_length=255)),
                ('priority', models.CharField(choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], default='Medium', max_length=10)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_assigned_by', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Temp',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('emp_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('admin', 'admin'), ('staff', 'staff'), ('intern', 'intern'), ('hr', 'hr')], default='intern', max_length=20)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalData',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_no', models.IntegerField()),
                ('aadhar_number', models.BigIntegerField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('photo', models.ImageField(upload_to='photos/')),
                ('created_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('emp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Sims.temp')),
            ],
        ),
        migrations.CreateModel(
            name='Fees',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('payment_method', models.CharField(blank=True, choices=[('CASH', 'Cash'), ('CARD', 'Card'), ('BANK_TRANSFER', 'Bank Transfer'), ('ONLINE', 'Online Payment')], max_length=50, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('paid_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_date', models.DateField(auto_now=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('domain', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Sims.domain', to_field='domain')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('fee_structure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Sims.feestructure')),
                ('emp_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Sims.temp')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('rating', models.DecimalField(choices=[(0.5, '0.5 - Very Poor'), (1.0, '1.0 - Poor'), (1.5, '1.5 - Below Average'), (2.0, '2.0 - Average'), (2.5, '2.5 - Fair'), (3.0, '3.0 - Good'), (3.5, '3.5 - Very Good'), (4.0, '4.0 - Excellent'), (4.5, '4.5 - Outstanding'), (5.0, '5.0 - Exceptional')], decimal_places=1, max_digits=3)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comments', models.TextField()),
                ('feedback_date', models.DateField(auto_now_add=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('is_private', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('acknowledged', 'Acknowledged')], default='submitted', max_length=20)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('feedback_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_given', to='Sims.temp')),
                ('feedback_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_received', to='Sims.temp')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='DRAFT', max_length=20)),
                ('is_deleted', models.BooleanField(default=False)),
                ('declaration_number', models.CharField(editable=False, max_length=50, unique=True)),
                ('title', models.CharField(max_length=255, null=True)),
                ('description', models.TextField()),
                ('file', models.FileField(null=True, upload_to='documents/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('receiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_documents', to='Sims.temp')),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_documents', to='Sims.temp')),
            ],
        ),
        migrations.CreateModel(
            name='CollegeDetails',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('location', models.CharField(max_length=255)),
                ('reg_no', models.IntegerField()),
                ('college_name', models.CharField(max_length=255)),
                ('degree', models.CharField(max_length=100)),
                ('college_department', models.CharField(max_length=100)),
                ('year_of_passing', models.IntegerField()),
                ('created_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('emp_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Sims.temp')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceLog',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('check_in', models.DateTimeField(default=django.utils.timezone.now)),
                ('check_out', models.DateTimeField(blank=True, null=True)),
                ('total_hours', models.DurationField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('reason', models.CharField(blank=True, choices=[('BREAK', 'Break'), ('LUNCH', 'Lunch'), ('END_OF_SHIFT', 'End of Shift'), ('MEETING', 'Meeting'), ('OTHER', 'Other')], max_length=20, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
                ('attendance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='Sims.attendance')),
                ('emp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Sims.temp')),
            ],
        ),
        migrations.AddField(
            model_name='attendance',
            name='emp_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Sims.temp'),
        ),
        migrations.AddField(
            model_name='assertstock',
            name='emp_id',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='Sims.temp'),
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('duration', models.CharField(blank=True, max_length=50, null=True)),
                ('days', models.CharField(blank=True, max_length=50, null=True)),
                ('shift_timing', models.CharField(blank=True, max_length=50, null=True)),
                ('scheme', models.CharField(blank=True, choices=[('FREE', 'Free'), ('COURSE', 'Course'), ('PROJECT', 'Project')], default='FREE', max_length=50, null=True)),
                ('team_name', models.CharField(blank=True, max_length=255, null=True)),
                ('user_status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('discontinued', 'Discontinued')], default='active', max_length=15)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('is_attendance_access', models.BooleanField(blank=True, default=True, null=True)),
                ('is_payroll_access', models.BooleanField(blank=True, default=True, null=True)),
                ('is_internmanagement_access', models.BooleanField(blank=True, default=True, null=True)),
                ('is_assert_access', models.BooleanField(blank=True, default=True, null=True)),
                ('asset_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Sims.assertstock')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Sims.department', to_field='department')),
                ('domain', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Sims.domain', to_field='domain')),
                ('emp_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Sims.temp')),
                ('reporting_manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='managed_user_data', to=settings.AUTH_USER_MODEL)),
                ('reporting_supervisor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supervised_user_data', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('file', models.FileField(null=True, upload_to='document_versions/%Y/%m/%d/')),
                ('version_number', models.PositiveIntegerField()),
                ('changes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='Sims.document')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Sims.temp')),
            ],
            options={
                'unique_together': {('document', 'version_number')},
            },
        ),
    ]
